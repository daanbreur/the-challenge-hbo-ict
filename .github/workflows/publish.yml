name: Publish & Build
on:
  push:
    tags:
      - "v*"
      - "beta-v*"

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: "Generate release changelog"
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: changelog
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release For Tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ needs.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') }}

  build:
    name: Build Executables
    needs: create_release
    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./code/ClickerCompanion
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
            BUILD_CMD: npm run package
            OUT_FILE_NAME: clickercompanion-setup.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 19.3.0
      - name: Install dependencies for ${{ matrix.os }}
        run: |
          npm install
          npm run postinstall
      - name: Pre-Build for ${{ matrix.os }}
        working-directory: ${{env.working-directory}}
        if: ${{ matrix.PRE_BUILD_CMD != '' }}
        run: ${{ matrix.PRE_BUILD_CMD }}
      - name: Build for ${{ matrix.os }}
        working-directory: ${{env.working-directory}}
        run: ${{ matrix.BUILD_CMD }}
      - name: Post-Build for ${{ matrix.os }}
        working-directory: ${{env.working-directory}}
        if: ${{ matrix.POST_BUILD_CMD != '' }}
        run: ${{ matrix.POST_BUILD_CMD }}
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: "${{runner.os}}-${{matrix.OUT_FILE_NAME}}"
          asset_path: "${{env.working-directory}}/release/build/${{matrix.OUT_FILE_NAME}}"
          asset_content_type: ${{ matrix.ASSET_MIME }}

  purge_release_if_failed:
    name: Delete release if build failed
    needs: build
    runs-on: ubuntu-latest
    if: ${{ failure() || cancelled() }}
    steps:
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: true
          tag_name: ${{ github.ref_name }}
